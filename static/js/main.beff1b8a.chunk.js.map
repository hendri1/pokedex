{"version":3,"sources":["utils/helper/index.js","components/atoms/MyAvatar/index.js","components/atoms/MyImage/index.js","components/atoms/MyButton/index.js","components/atoms/MyInput/index.js","components/atoms/MyLabel/index.js","components/molecules/MyFormField/index.js","components/molecules/MyCard/index.js","components/organisms/MyCardList/index.js","components/organisms/MyForm/index.js","configs/API/RestHttp.js","configs/API/HttpService.js","configs/API/MyAPI/index.js","configs/API/MyAPI/endpoints.js","configs/API/PokemonAPI/index.js","configs/API/PokemonAPI/endpoints.js","configs/API/index.js","services/PokemonService/index.js","routes/AppRoutes.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["handleAsync","promise","a","response","undefined","MyAvatarStyled","styled","div","Math","floor","random","toString","MyAvatar","props","suffix","defaultProps","MyImageWrapperStyled","MyImageStyled","img","MyImage","source","src","button","MyInputStyled","input","MyInput","name","type","MyLabelStyled","label","MyLabel","title","MyFormFieldStyled","MyFormField","labelTitle","MyCardStyled","MyCardHeaderStyled","MyCardHeaderContentStyled","MyCardBodyStyled","MyCardFooterStyled","MyCard","avatarSuffix","labelName","sourceImage","children","Children","React","toArray","RenderContent","content","map","item","MyCardContent","RenderFooter","footer","MyCardFooter","RenderImage","dangerouslySetInnerHTML","__html","Content","Footer","MyCardListStyled","form","MyCardList","RenderCard","itemIndex","key","Card","MyFormStyled","MyForm","RenderFormField","FormField","OPTIONS","baseURL","process","timeout","headers","RestHttp","axios","create","interceptors","request","use","config","token","Cookie","get","checkToken","Authorization","status","Error","access_token","set","expires","parseInt","setToken","HttpService","httpClient","this","_httpClient","url","params","responseType","method","err","message","data","conifg","AuthService","httpService","_http","payload","PokemonAPI","id","pokemonAPI","MyAPI","PokemonGetListService","getList","res","appRoutes","component","useState","pokemonList","setPokemonList","setContent","useEffect","subscribePokemon","results","getPokemonList","elem","forEach","pokemon","index","substr","length","console","log","push","charAt","exact","path","App","basename","AppRoutes","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.beff1b8a.chunk.js","sourcesContent":["import { moment, Cookie } from 'libraries'\n\nexport const handleAsync = async promise => {\n  try {\n    const response = await promise\n    return [response, undefined]\n  } catch (err) {\n    return [undefined, err]\n  }\n}\n\nexport const convertDate = date => {\n  if (!date) return null\n  return moment(date).format('DD MMMM YYYY')\n}\n\nexport const randomHexaColor = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`\n}\n\nexport const checkToken = (token = '') => {\n  return Cookie.get(process.env.REACT_APP_SESSION_NAME)\n}\n\nexport const setToken = (token = '') => {\n  Cookie.set(process.env.REACT_APP_SESSION_NAME, token, { expires: parseInt(process.env.REACT_APP_SESSION_EXPIRES, 10) })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { randomHexaColor } from 'utils'\n\nconst MyAvatarStyled = styled.div`\n  flex: 0 0 auto;\n  margin-right: 16px;\n  background-color: ${randomHexaColor};\n  color: #FFF;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n  font-size: 1.25rem;\n  align-items: center;\n  flex-shrink: 0;\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  line-height: 1;\n  user-select: none;\n  border-radius: 50%;\n  justify-content: center;\n`\n\nfunction MyAvatar (props) {\n  const { suffix } = props\n\n  return (\n    <MyAvatarStyled>\n      {suffix}\n    </MyAvatarStyled>\n  )\n}\n\nMyAvatar.propTypes = {\n  suffix: PropTypes.string\n}\n\nMyAvatar.defaultProps = {\n  suffix: 'NN'\n}\n\nexport default MyAvatar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst MyImageWrapperStyled = styled.div`\n  width: 100%;\n`\n\nconst MyImageStyled = styled.img`\n  display: block;\n  margin: auto;\n`\n\nfunction MyImage (props) {\n  const { source } = props\n\n  return (\n    <MyImageWrapperStyled>\n      <MyImageStyled src={source} />\n    </MyImageWrapperStyled>\n  )\n}\n\nMyImage.propTypes = {\n  source: PropTypes.string\n}\n\nMyImage.defaultProps = {\n  source: ''\n}\n\nexport default MyImage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst MyButtonStyled = styled.button`\n  background: #000;\n  color: #FFF;\n  border: none;\n`\n\nfunction MyButton (props) {\n  const { title } = props\n\n  return (\n    <MyButtonStyled>\n      {title}\n    </MyButtonStyled>\n  )\n}\n\nMyButton.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default MyButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst MyInputStyled = styled.input`\n  border: 1px solid #000;\n`\n\nfunction MyInput (props) {\n  const { name, type } = props\n\n  return (\n    <MyInputStyled name={name} type={type} />\n  )\n}\n\nMyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n}\n\nexport default MyInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst MyLabelStyled = styled.label`\n  color: #000;\n`\n\nfunction MyLabel (props) {\n  const { title } = props\n\n  return (\n    <MyLabelStyled>\n      {title}\n    </MyLabelStyled>\n  )\n}\n\nMyLabel.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default MyLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { MyLabel, MyInput } from 'components/atoms'\n\nconst MyFormFieldStyled = styled.div`\n`\n\nfunction MyFormField (props) {\n  const { labelTitle, name, type } = props\n\n  return (\n    <MyFormFieldStyled>\n      <MyLabel title={labelTitle} />\n      <MyInput name={name} type={type} />\n    </MyFormFieldStyled>\n  )\n}\n\nMyFormField.propTypes = {\n  labelTitle: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n}\n\nexport default MyFormField\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { MyAvatar, MyLabel, MyImage } from 'components/atoms'\n\nconst MyCardStyled = styled.div`\n  max-width: 345px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\n  border-radius: 4px;\n  color: rgba(0, 0, 0, 0.87);\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  background-color: #fff;\n`\n\nconst MyCardHeaderStyled = styled.div`\n  display: flex;\n  padding: 16px;\n  align-items: center;\n  text-transform: capitalize;\n`\n\nconst MyCardHeaderContentStyled = styled.div`\n  flex: 1 1 auto;\n`\n\nconst MyCardBodyStyled = styled.div`\n  padding: 16px;\n`\n\nconst MyCardFooterStyled = styled.div`\n  display: flex;\n  padding: 8px;\n  align-items: center;\n`\n\nfunction MyCard (props) {\n  const { avatarSuffix, labelName, sourceImage, children } = props\n\n  const Children = React.Children.toArray(children)\n\n  function RenderImage () {\n    if (!sourceImage) return\n\n    return (\n      <MyImage source={sourceImage} />\n    )\n  }\n\n  function RenderContent () {\n    const content = React.Children.map(Children, (item) => {\n      if (item.type !== MyCardContent) return\n      return item\n    })\n\n    return (\n      <div>\n        {content}\n      </div>\n    )\n  }\n\n  function RenderFooter () {\n    const footer = React.Children.map(Children, (item) => {\n      if (item.type !== MyCardFooter) return\n      return item\n    })\n\n    return (\n      <div>\n        {footer}\n      </div>\n    )\n  }\n\n  return (\n    <MyCardStyled>\n      <MyCardHeaderStyled>\n        <MyAvatar suffix={avatarSuffix} />\n        <MyCardHeaderContentStyled>\n          <MyLabel title={labelName} />\n        </MyCardHeaderContentStyled>\n      </MyCardHeaderStyled>\n      {RenderImage()}\n      <MyCardBodyStyled>\n        <RenderContent />\n      </MyCardBodyStyled>\n      <MyCardFooterStyled>\n        <RenderFooter />\n      </MyCardFooterStyled>\n    </MyCardStyled>\n  )\n}\n\nMyCard.propTypes = {\n  avatarSuffix: PropTypes.string,\n  labelName: PropTypes.string,\n  sourceImage: PropTypes.string,\n  children: PropTypes.any\n}\n\nMyCard.defaultProps = {\n  avatarSuffix: '',\n  labelName: '',\n  sourceImage: ''\n}\n\nfunction MyCardContent ({ children }) {\n  return (\n    <div dangerouslySetInnerHTML={{ __html: children }} />\n  )\n}\n\nMyCardContent.propTypes = {\n  children: PropTypes.any\n}\n\nMyCard.Content = MyCardContent\n\nfunction MyCardFooter ({ children }) {\n  return (\n    <div dangerouslySetInnerHTML={{ __html: children }} />\n  )\n}\n\nMyCardFooter.propTypes = {\n  children: PropTypes.any\n}\n\nMyCard.Footer = MyCardFooter\n\nexport default MyCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { MyCard } from 'components/molecules'\n\nconst MyCardListStyled = styled.form`\n`\n\nfunction MyCardList ({ children }) {\n  const Children = React.Children.toArray(children)\n\n  function RenderCard () {\n    return React.Children.map(Children, (item, itemIndex) => {\n      const { avatarSuffix, labelName, sourceImage, children } = item.props\n\n      return (\n        <MyCard\n          key={`card-${itemIndex}`}\n          avatarSuffix={avatarSuffix}\n          labelName={labelName}\n          sourceImage={sourceImage}\n        >\n          {children}\n        </MyCard>\n      )\n    })\n  }\n\n  return (\n    <MyCardListStyled>\n      <RenderCard />\n    </MyCardListStyled>\n  )\n}\n\nMyCardList.propTypes = {\n  children: PropTypes.any\n}\n\nfunction Card ({ children }) {\n  return (\n    <div>\n      {children}\n    </div>\n  )\n}\n\nCard.propTypes = {\n  children: PropTypes.any\n}\n\nMyCardList.Card = Card\n\nexport default MyCardList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { MyFormField } from 'components/molecules'\n\nconst MyFormStyled = styled.form`\n`\n\nfunction MyForm ({ children }) {\n  const Children = React.Children.toArray(children)\n\n  function RenderFormField () {\n    return React.Children.map(Children, (item, itemIndex) => {\n      const { labelTitle, name, type } = item.props\n      return (\n        <MyFormField\n          key={`form-field-${itemIndex}`}\n          labelTitle={labelTitle}\n          name={name}\n          type={type}\n        />\n      )\n    })\n  }\n\n  return (\n    <MyFormStyled>\n      <RenderFormField />\n    </MyFormStyled>\n  )\n}\n\nMyForm.propTypes = {\n  children: PropTypes.any\n}\n\nfunction FormField ({ children }) {\n  return (\n    <div>\n      {children}\n    </div>\n  )\n}\n\nFormField.propTypes = {\n  children: PropTypes.any\n}\n\nMyForm.FormField = FormField\n\nexport default MyForm\n","import axios from 'axios'\nimport { setToken, checkToken } from 'utils'\n\nconst baseURL = process.env.REACT_APP_API_URL\n\nconst OPTIONS = {\n  baseURL,\n  timeout: 20000,\n  headers: {}\n}\n\nconst RestHttp = axios.create(OPTIONS)\n\nRestHttp.interceptors.request.use(\n  (config) => {\n    const token = checkToken()\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config\n  }\n)\n\nRestHttp.interceptors.response.use((response) => {\n  if (response.status === 0) {\n    const error = new Error('Request timeout')\n    error.response = response\n\n    return null\n  }\n\n  const token = response.access_token\n  if (token) setToken(token)\n\n  return response\n})\n\nexport default RestHttp\n","export default class HttpService {\n  constructor (httpClient) {\n    this._httpClient = httpClient\n  }\n\n  get (url, params = {}, responseType = 'json') {\n    try {\n      return this._httpClient.request({\n        method: 'get',\n        url,\n        params,\n        responseType\n      })\n    } catch (err) {\n      throw new Error(err.message)\n    }\n  }\n\n  post (url, data, config = {}) {\n    try {\n      return this._httpClient.request({\n        method: 'post',\n        url,\n        data,\n        ...config\n      })\n    } catch (err) {\n      throw new Error(err.message)\n    }\n  }\n\n  patch (url, data) {\n    try {\n      return this._httpClient.request({\n        method: 'patch',\n        url,\n        data\n      })\n    } catch (err) {\n      throw new Error(err.message)\n    }\n  }\n\n  put (url, data, conifg = {}) {\n    try {\n      return this._httpClient.request({\n        method: 'put',\n        url,\n        data,\n        ...conifg\n      })\n    } catch (err) {\n      throw new Error(err.message)\n    }\n  }\n\n  delete (url, data = null) {\n    try {\n      return this._httpClient.request({\n        method: 'delete',\n        url,\n        data\n      })\n    } catch (err) {\n      throw new Error(err.message)\n    }\n  }\n}\n","import * as endpoints from './endpoints'\n\nexport default class AuthService {\n  constructor (httpService) {\n    this._http = httpService\n  }\n\n  async get (payload) {\n    try {\n      const { data } = await this._http.get(endpoints.GET, payload)\n\n      return data\n    } catch (error) {\n      throw error.response.data\n    }\n  }\n}\n","export const GET = 'api/v1/get'\n","import * as endpoints from './endpoints'\n\nexport default class PokemonAPI {\n  constructor (httpService) {\n    this._http = httpService\n  }\n\n  async get (id) {\n    try {\n      const url = `${endpoints.GET}/${id}`\n      const { data } = await this._http.get(url)\n\n      return data\n    } catch (error) {\n      throw error.response.data\n    }\n  }\n\n  async getList (payload = {}) {\n    try {\n      const url = `${endpoints.GET_LIST}`\n      const { data } = await this._http.get(url, payload)\n\n      return data\n    } catch (error) {\n      throw error.response.data\n    }\n  }\n}\n","export const GET = 'api/v2/pokemon'\nexport const GET_LIST = 'api/v2/pokemon'\n","import RestHttp from './RestHttp'\nimport HttpService from './HttpService'\n\nimport MyAPI from './MyAPI'\nimport PokemonAPI from './PokemonAPI'\n\nexport const httpService = new HttpService(RestHttp)\nexport const myAPI = new MyAPI(httpService)\nexport const pokemonAPI = new PokemonAPI(httpService)\n","import { pokemonAPI } from 'configs'\nimport { handleAsync } from 'utils'\n\nexport const PokemonGetService = async (id) => {\n  const [res, err] = await handleAsync(pokemonAPI.get(id))\n  if (err) throw err\n  return res\n}\n\nexport const PokemonGetListService = async (payload = {}) => {\n  const [res, err] = await handleAsync(pokemonAPI.getList(payload))\n  if (err) throw err\n  return res\n}\n","import { Home } from 'pages'\n\nconst appRoutes = [\n  {\n    name: 'Home',\n    component: Home,\n    exact: true,\n    path: '/'\n  }\n]\n\nexport default appRoutes\n","import React, { useState, useEffect } from 'react'\n// import { MyCard } from 'components/molecules'\nimport { MyCardList } from 'components/organisms'\n\nimport { PokemonGetListService } from 'services'\n\nconst Home = () => {\n  const [pokemonList, setPokemonList] = useState([])\n  const [content, setContent] = useState([])\n\n  useEffect(() => {\n    let subscribePokemon = true\n\n    async function getPokemonList () {\n      const payload = {}\n      const response = await PokemonGetListService(payload)\n      if (subscribePokemon) setPokemonList(response.results)\n    }\n\n    getPokemonList()\n\n    return () => {\n      subscribePokemon = false\n    }\n  }, [])\n\n  useEffect(() => {\n    const elem = []\n    pokemonList.forEach((pokemon, index) => {\n      const id = pokemon.url.substr(pokemon.url.length - 2, 1)\n      console.log(id)\n      elem.push(\n        <MyCardList.Card\n          key={index}\n          avatarSuffix={pokemon.name ? pokemon.name.charAt(0) : ''}\n          labelName={pokemon.name}\n          sourceImage={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}\n        />\n      )\n    })\n    setContent(elem)\n  }, [pokemonList])\n\n  return (\n    <div>\n      <MyCardList>\n        {content}\n      </MyCardList>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AppRoutes } from 'routes'\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        {AppRoutes.map(route => <Route key={route} {...route} />)}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* global fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}